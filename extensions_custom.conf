[globals]
FORWARD_SECRET=%FORWARD_SECRET%
PHONE_ID=%PHONE_ID%
FORWARD_URL=%FORWARD_URL%
CALL_FORWARD_URL=%CALL_FORWARD_URL%

[incoming-mobile]

; -------------------- 短信处理 --------------------
exten => sms,1,Verbose(Incoming SMS from ${CALLERID(num)} ${BASE64_DECODE(${SMS_BASE64})})
exten => sms,n,System(echo '${STRFTIME(${EPOCH},,%Y-%m-%d %H:%M:%S)} - ${QUECTELNAME} - ${CALLERID(num)}: ${BASE64_DECODE(${SMS_BASE64})}' >> /data/log/sms.txt)
exten => sms,n,Set(SMS_TEXT=${BASE64_DECODE(${SMS_BASE64})})
exten => sms,n,Set(SMS_TIME=${STRFTIME(${EPOCH},,%Y-%m-%dTH:%M:%S%z)})
exten => sms,n,Set(SMS_ID=${EPOCH}-${RAND()})

; --- 核心逻辑：直接从通道变量读取本机号码 ---
exten => sms,n,NoOp(Attempting to read phone number from channel variable ${QUECTELNUMBER})
exten => sms,n,Set(MODEM_NUMBER=${QUECTELNUMBER})
exten => sms,n,NoOp(Modem number read from variable: ${MODEM_NUMBER})

; 判断号码是否为空 (is empty) 或者 (OR) 是否为 "Unknown"
; 如果是，则使用全局变量 PHONE_ID (回退机制)
exten => sms,n,Set(FORWARDING_ID=${IF($[ $[ "${MODEM_NUMBER}" = "" ] | $[ "${MODEM_NUMBER}" = "Unknown" ] ]?${PHONE_ID}:${MODEM_NUMBER})})

exten => sms,n,NoOp(Final forwarding ID being used: ${FORWARDING_ID})

; 使用最终确定的 FORWARDING_ID 转发 SMS 到 PHP 脚本
exten => sms,n,System(/usr/local/bin/forward_sms.php ${FORWARD_SECRET} ${CALLERID(num)} "${SMS_TIME}" "${SMS_TEXT}" ${FORWARDING_ID} ${SMS_ID} ${FORWARD_URL})

exten => sms,n,Hangup()

; -------------------- USSD 处理 --------------------
exten => ussd,1,Verbose(Incoming USSD: ${BASE64_DECODE(${USSD_BASE64})})
exten => ussd,n,System(echo '${STRFTIME(${EPOCH},,%Y-%m-%d %H:%M:%S)} - ${QUECTELNAME}: ${BASE64_DECODE(${USSD_BASE64})}' >> /data/log/ussd.txt)
exten => ussd,n,Hangup()

; -------------------- 来电处理 --------------------
;exten => _X.,1,Verbose(Incoming Call from ${CALLERID(num)})

; 记录时间和 ID
; same => n,Set(CALL_TIME=${STRFTIME(${EPOCH},,%Y-%m-%dT%H:%M:%S%z)})
; same => n,Set(CALL_ID=${EPOCH}-${RAND()})

; 构建 JSON 数据
; same => n,Set(CALL_JSON_DATA={"secret":"${FORWARD_SECRET}","number":"${CALLERID(num)}","time":"${CALL_TIME}","type":"incoming_call","source":"asterisk","phone_id":"${PHONE_ID}","call_id":"${CALL_ID}","timestamp":"${CALL_TIME}"})

; 异步通知（后台执行 curl）
; same => n,System(nohup sh -c 'echo "${CALL_JSON_DATA}" | curl -s -X POST -H "Content-Type: application/json" -H "User-Agent: Asterisk-Chan-Quectel/1.0" -d @- --connect-timeout 5 --max-time 10 ${CALL_FORWARD_URL} >> /data/log/call_forward.log 2>&1 &' )

; 接听来电并转接
; same => n,Answer()
; same => n,Dial(SIP/1000,20)   ; 转接到 FreePBX 分机 1000

; 挂断
; same => n,Hangup()
; -------------------- 来电处理 --------------------
exten => _.,1,Verbose(Incoming Call from ${CALLERID(num)})

; 设置来电显示名称
same => n,Set(CALLERID(name)=${CALLERID(num)})

; 记录时间和生成唯一ID
same => n,Set(CALL_TIME=${STRFTIME(${EPOCH},,%Y-%m-%dT%H:%M:%S%z)})
same => n,Set(CALL_ID=${EPOCH}-${RAND()})

; 构建 JSON 数据
; 请确保以下变量已在前面的配置中定义：
; - FORWARD_SECRET: 转发密钥
; - PHONE_ID: 设备标识
; - CALL_FORWARD_URL: 转发目标URL
same => n,Set(CALL_JSON_DATA={"secret":"${FORWARD_SECRET}","number":"${CALLERID(num)}","time":"${CALL_TIME}","type":"incoming_call","source":"asterisk","phone_id":"${PHONE_ID}","call_id":"${CALL_ID}","timestamp":"${CALL_TIME}"})

; 异步通知（后台执行 curl，不阻塞呼叫）
same => n,System(nohup sh -c 'echo "${CALL_JSON_DATA}" | curl -s -X POST -H "Content-Type: application/json" -H "User-Agent: Asterisk-Chan-Quectel/1.0" -d @- --connect-timeout 5 --max-time 10 ${CALL_FORWARD_URL} >> /var/log/asterisk/call_forward.log 2>&1 &')

; 继续原有转接逻辑
same => n,Goto(from-trunk,${EXTEN},1)
